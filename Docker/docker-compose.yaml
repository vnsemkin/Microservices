version: '3.9'
services:
  database:
    container_name: database
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    volumes:
      - ../config/db_scripts:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: no
    env_file:
      - keycloak_config.env
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
      - keycloak_config:/opt/jboss/keycloak/standalone/configuration
    command: start-dev
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "keycloak"
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - ../config/vault:/vault/config/
      - vault_data:/vault/data
    command: server
    networks:
      backend:
        aliases:
          - "vault"
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - backend
  kafka-server:
    image: wurstmeister/kafka:latest
    container_name: kafka-server
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka-server
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka-server"

  redis-server:
    image: redis:alpine
    container_name: redis-server
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "redis-server"
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      backend:
        aliases:
          - "zipkin"
  grafana:
    image: grafana/grafana-oss:10.2.2
    container_name: grafana
    depends_on:
      - loki
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ../config/observability/grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ../config/observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ../config/observability/grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      backend:
        aliases:
          - "grafana"
  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    depends_on:
      - fluent-bit
    ports:
      - "3100:3100"
    networks:
      backend:
        aliases:
          - "loki"

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:2.9.1
    container_name: fluent-bit
    ports:
      - "24224:24224"
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    networks:
      backend:
        aliases:
          - "fluent-bit"
  config-server:
    container_name: config-server
    build: ../ConfigurationServer/
    ports:
      - "8071:8071"
    depends_on:
      fluent-bit:
        condition: service_started
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    networks:
      backend:
        aliases:
          - "config-server"
  gateway-server:
    container_name: gateway-server
    build: ../GatewayServer/
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-server:8071"
      SPRING_PROFILES_ACTIVE: "prod"
    ports:
      - "8072:8072"
    depends_on:
      fluent-bit:
        condition: service_started
      config-server:
        condition: service_started
      keycloak:
        condition: service_started
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    networks:
      backend:
        aliases:
          - "gateway-server"
  eureka-server:
    container_name: eureka-server
    build: ../EurekaServer/
    environment:
      SPRING_PROFILES_ACTIVE: "prod"
      CONFIG_SERVER_URL: "http://config-server"
      CONFIG_SERVER_PORT: "8071"
    ports:
      - "8070:8070"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    depends_on:
      fluent-bit:
        condition: service_started
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eureka-server"
  license-service:
    container_name: license-service
    build: ../LicenseService/
    environment:
      SPRING_PROFILES_ACTIVE: "prod"
      CONFIG_SERVER_URL: "http://config-server"
      CONFIG_SERVER_PORT: "8071"
    depends_on:
      fluent-bit:
        condition: service_started
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      kafka-server:
        condition: service_started
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    ports:
      - "8082:8082"
    networks:
      backend:
        aliases:
          - "license-server"
  organization-service:
    container_name: organization-service
    build: ../OrganizationService/
    environment:
      SPRING_PROFILES_ACTIVE: "prod"
      CONFIG_SERVER_URL: "http://config-server"
      CONFIG_SERVER_PORT: "8071"
      DATABASE_SERVER_PORT: "5432"
    depends_on:
      fluent-bit:
        condition: service_started
      database:
        condition: service_healthy
      config-server:
        condition: service_started
      kafka-server:
        condition: service_started
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    ports:
      - "8081:8081"
    networks:
      backend:
        aliases:
          - "organization-server"
volumes:
  keycloak_data:
  keycloak_config:
  postgres_data:
  mysql_data:
  vault_data:
    driver: local
networks:
  backend:
    driver: bridge