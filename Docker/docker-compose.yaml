version: '3.8'
services:
  database:
    container_name: database
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
      - ./keycloak_db.sql:/docker-entrypoint-initdb.d/keycloak_db.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: no
    env_file:
      - keycloak_config.env
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
      - keycloak_config:/opt/jboss/keycloak/standalone/configuration
    command: start-dev
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "keycloak"
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - backend
  kafkaserver:
    image: wurstmeister/kafka:latest
    container_name: kafkaserver
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=localhost
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    #      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1,orgChangeTopic:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      - backend
  redisserver:
    image: redis:alpine
    container_name: redisserver
    ports:
      - 6379:6379
    networks:
      - backend
#  eureka-server:
#    container_name: eureka-server
#    build: ../EurekaServer/
#    environment:
#      PROFILE: "dev"
#      CONFIG_SERVER_URL: "http://config-server"
#      CONFIG_SERVER_PORT: "8071"
#    ports:
#      - "8070:8070"
#    depends_on:
#      database:
#        condition: service_healthy
#      config-server:
#        condition: service_started
#    networks:
#      backend:
#        aliases:
#          - "eureka-server"
#  config-server:
#    container_name: config-server
#    build: ../ConfigurationServer/
#    ports:
#      - "8071:8071"
#    networks:
#      backend:
#        aliases:
#          - "config-server"
#  license-service:
#    container_name: licensing-service
#    build: ../LicenseService/
#    environment:
#      PROFILE: "dev"
#      CONFIG_SERVER_URL: "http://config-server"
#      CONFIG_SERVER_PORT: "8071"
#      DATABASE_SERVER_PORT: "5432"
#    depends_on:
#      database:
#        condition: service_healthy
#      config-server:
#        condition: service_started
#    ports:
#      - "8082:8082"
#    networks:
#      - backend
#  organization-service:
#    container_name: organization-service
#    build: ../OrganizationService/
#    environment:
#      PROFILE: "dev"
#      CONFIG_SERVER_URL: "http://config-server"
#      CONFIG_SERVER_PORT: "8071"
#      DATABASE_SERVER_PORT: "5432"
#    depends_on:
#      database:
#        condition: service_healthy
#      config-server:
#        condition: service_started
#    ports:
#      - "8081:8081"
#    networks:
#      - backend
#  db:
#    container_name: mysql
#    image: mysql
#    restart: always
#    ports:
#      - "3306:3306"
#    environment:
#      MYSQL_ROOT_PASSWORD: "mysql"
#    volumes:
#      - mysql_data:/var/lib/mysql
#    networks:
#      backend:
#        aliases:
#          - "mysql"
volumes:
  keycloak_data:
  keycloak_config:
  postgres_data:
  mysql_data:
networks:
  backend:
    driver: bridge