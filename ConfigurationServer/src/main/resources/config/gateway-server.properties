# OAuth2/OpenID Connect Client Configuration
spring.security.oauth2.client.registration.keycloak.client-id=my_app
spring.security.oauth2.client.registration.keycloak.client-secret=${KEY_SECRET}
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid

# Keycloak as Authorization Server Configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/my_microservices
# If your application is running behind a proxy that terminates SSL, you might need to set this to true
spring.security.oauth2.client.provider.keycloak.ssl-required=external

# Additional Configuration for Resource Server (if your application also acts as a resource server)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/my_microservices

app.client=my_app