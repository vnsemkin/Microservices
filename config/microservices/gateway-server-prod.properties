# General application properties
app.client=my_app
server.port=8072

# OAuth2/OpenID Connect Client Configuration
spring.security.oauth2.client.registration.keycloak.client-id=
spring.security.oauth2.client.registration.keycloak.client-secret=
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid

# Keycloak as Authorization Server Configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8080/realms/my_microservices
# If your application is running behind a proxy that terminates SSL, you might need to set this to true
spring.security.oauth2.client.provider.keycloak.ssl-required=external

# Additional Configuration for Resource Server (if your application also acts as a resource server)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/my_microservices

# Eureka Client Configuration
eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://eureka-server:8070/eureka/

# Spring Cloud Gateway Discovery Locator Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true

# Management Endpoints Configuration
management.endpoints.web.exposure.include=*
management.endpoint.gateway.enabled=true

# Logging
#logging.group.mytracer=io.zipkin,io.micrometer
#logging.level.mytracer=TRACE

# Zipkin
# Important if you use GlobalFilter to get currentSpan!
spring.reactor.context-propagation= AUTO
management.zipkin.tracing.endpoint= http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0
